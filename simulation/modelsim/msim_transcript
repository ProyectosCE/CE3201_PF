# Reading E:/intelFPGA/18.1/modelsim_ase/tcl/vsim/pref.tcl
# do Gambling_Tec_run_msim_rtl_verilog.do
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Model Technology ModelSim - Intel FPGA Edition vmap 10.5b Lib Mapping Utility 2016.10 Oct  5 2016
# vmap work rtl_work 
# Copying E:/intelFPGA/18.1/modelsim_ase/win32aloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# 
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Condition_Check.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:44 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Condition_Check.sv 
# -- Compiling module Condition_Check
# 
# Top level modules:
# 	Condition_Check
# End time: 09:12:44 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Register_File.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:45 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Register_File.sv 
# -- Compiling module Register_File
# 
# Top level modules:
# 	Register_File
# End time: 09:12:45 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Register.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:45 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Register.sv 
# -- Compiling module Register
# 
# Top level modules:
# 	Register
# End time: 09:12:45 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Mux.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:45 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Mux.sv 
# -- Compiling module Mux
# 
# Top level modules:
# 	Mux
# End time: 09:12:45 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Extender.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:45 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Extender.sv 
# -- Compiling module Extender
# 
# Top level modules:
# 	Extender
# End time: 09:12:45 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Data_Memory.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:45 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Data_Memory.sv 
# -- Compiling module Data_Memory
# 
# Top level modules:
# 	Data_Memory
# End time: 09:12:45 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/CPU.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:45 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/CPU.sv 
# -- Compiling module CPU
# 
# Top level modules:
# 	CPU
# End time: 09:12:45 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/ALU.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:45 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/ALU.sv 
# -- Compiling module ALU
# 
# Top level modules:
# 	ALU
# End time: 09:12:45 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Adder.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:45 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Adder.sv 
# -- Compiling module Adder
# 
# Top level modules:
# 	Adder
# End time: 09:12:45 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Gambling_Tec.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:46 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Gambling_Tec.sv 
# -- Compiling module Gambling_Tec
# 
# Top level modules:
# 	Gambling_Tec
# End time: 09:12:46 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Control_Unit.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:46 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Control_Unit.sv 
# -- Compiling module Control_Unit
# 
# Top level modules:
# 	Control_Unit
# End time: 09:12:46 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/Decoder.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:46 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/Decoder.sv 
# -- Compiling module Decoder
# -- Compiling module PC_Logic
# -- Compiling module Main_Decoder
# -- Compiling module ALU_Decoder
# 
# Top level modules:
# 	Decoder
# End time: 09:12:46 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/ROM.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:46 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/ROM.sv 
# -- Compiling module ROM
# 
# Top level modules:
# 	ROM
# End time: 09:12:46 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vlog -sv -work work +incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF {C:/Users/joseb/Documents/GitHub/CE3201_PF/tb_Gambling_Tec_ROM.sv}
# Model Technology ModelSim - Intel FPGA Edition vlog 10.5b Compiler 2016.10 Oct  5 2016
# Start time: 09:12:46 on Jun 17,2025
# vlog -reportprogress 300 -sv -work work "+incdir+C:/Users/joseb/Documents/GitHub/CE3201_PF" C:/Users/joseb/Documents/GitHub/CE3201_PF/tb_Gambling_Tec_ROM.sv 
# -- Compiling module tb_Gambling_Tec_ROM
# 
# Top level modules:
# 	tb_Gambling_Tec_ROM
# End time: 09:12:46 on Jun 17,2025, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# 
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs="+acc"  tb_Gambling_Tec_ROM
# vsim -t 1ps -L altera_ver -L lpm_ver -L sgate_ver -L altera_mf_ver -L altera_lnsim_ver -L cyclonev_ver -L cyclonev_hssi_ver -L cyclonev_pcie_hip_ver -L rtl_work -L work -voptargs=""+acc"" tb_Gambling_Tec_ROM 
# Start time: 09:12:46 on Jun 17,2025
# Loading sv_std.std
# Loading work.tb_Gambling_Tec_ROM
# Loading work.Gambling_Tec
# Loading work.ROM
# Loading work.CPU
# Loading work.Mux
# Loading work.Register
# Loading work.Adder
# Loading work.Register_File
# Loading work.Extender
# Loading work.ALU
# Loading work.Control_Unit
# Loading work.Decoder
# Loading work.PC_Logic
# Loading work.Main_Decoder
# Loading work.ALU_Decoder
# Loading work.Condition_Check
# Loading work.Data_Memory
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# ==== TEST GENERAL CPU DESDE ROM ====
# === Estado inicial de RAM ===
# RAM[0] = 10
# RAM[1] = 20
# RAM[2] = 30
# RAM[3] = 40
# RAM[4] = 50
# RAM[5] = 60
# RAM[6] = 70
# =============================
# Ciclo 0:
#   PC                 = 0
#   Instr              = 0xe0400000
#   ALUControl         = 1
#   ALUResult (addr)   = 0
#   ReadData           = 10
#   Result             = 0
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 1
#   R0 = 0
#   R1 = 0
#   R2 = 0
#   R3 = 0
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 1:
#   PC                 = 4
#   Instr              = 0xe280000a
#   ALUControl         = 0
#   ALUResult (addr)   = 10
#   ReadData           = 30
#   Result             = 10
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 0
#   R1 = 0
#   R2 = 0
#   R3 = 0
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 2:
#   PC                 = 8
#   Instr              = 0xe0411001
#   ALUControl         = 1
#   ALUResult (addr)   = 0
#   ReadData           = 10
#   Result             = 0
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 1
#   R0 = 10
#   R1 = 0
#   R2 = 0
#   R3 = 0
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 3:
#   PC                 = 12
#   Instr              = 0xe2811010
#   ALUControl         = 0
#   ALUResult (addr)   = 16
#   ReadData           = 50
#   Result             = 16
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 10
#   R1 = 0
#   R2 = 0
#   R3 = 0
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 4:
#   PC                 = 16
#   Instr              = 0xe0422002
#   ALUControl         = 1
#   ALUResult (addr)   = 0
#   ReadData           = 10
#   Result             = 0
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 1
#   R0 = 10
#   R1 = 16
#   R2 = 0
#   R3 = 0
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 5:
#   PC                 = 20
#   Instr              = 0xe2822020
#   ALUControl         = 0
#   ALUResult (addr)   = 32
#   ReadData           = x
#   Result             = 32
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 10
#   R1 = 16
#   R2 = 0
#   R3 = 0
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 6:
#   PC                 = 24
#   Instr              = 0xe0433003
#   ALUControl         = 1
#   ALUResult (addr)   = 0
#   ReadData           = 10
#   Result             = 0
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 1
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 0
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 7:
#   PC                 = 28
#   Instr              = 0xe2833020
#   ALUControl         = 0
#   ALUResult (addr)   = 32
#   ReadData           = x
#   Result             = 32
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 0
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 8:
#   PC                 = 32
#   Instr              = 0xe0444004
#   ALUControl         = 1
#   ALUResult (addr)   = 0
#   ReadData           = 10
#   Result             = 0
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 1
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 9:
#   PC                 = 36
#   Instr              = 0xe5804000
#   ALUControl         = 0
#   ALUResult (addr)   = 10
#   ReadData           = 30
#   Result             = 10
#   RegWrite           = 0
#   MemWrite           = 1
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 10:
#   PC                 = 40
#   Instr              = 0xe5814000
#   ALUControl         = 0
#   ALUResult (addr)   = 16
#   ReadData           = 50
#   Result             = 16
#   RegWrite           = 0
#   MemWrite           = 1
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 11:
#   PC                 = 44
#   Instr              = 0xe5824000
#   ALUControl         = 0
#   ALUResult (addr)   = 32
#   ReadData           = x
#   Result             = 32
#   RegWrite           = 0
#   MemWrite           = 1
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 12:
#   PC                 = 48
#   Instr              = 0xe5834000
#   ALUControl         = 0
#   ALUResult (addr)   = 32
#   ReadData           = 0
#   Result             = 32
#   RegWrite           = 0
#   MemWrite           = 1
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 13:
#   PC                 = 52
#   Instr              = 0xe0488008
#   ALUControl         = 1
#   ALUResult (addr)   = 0
#   ReadData           = 10
#   Result             = 0
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 1
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 14:
#   PC                 = 56
#   Instr              = 0xe2888003
#   ALUControl         = 0
#   ALUResult (addr)   = 3
#   ReadData           = 10
#   Result             = 3
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 0
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 15:
#   PC                 = 60
#   Instr              = 0xe5905000
#   ALUControl         = 0
#   ALUResult (addr)   = 10
#   ReadData           = 0
#   Result             = 0
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 16:
#   PC                 = 64
#   Instr              = 0xe3550029
#   ALUControl         = 1
#   ALUResult (addr)   = 4294967255
#   ReadData           = x
#   Result             = 4294967255
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 110
#   R0 = 10
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 17:
#   PC                 = 68
#   Instr              = 0x0a000006
#   ALUControl         = 0
#   ALUResult (addr)   = 100
#   ReadData           = x
#   Result             = 100
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 4294967255
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 18:
#   PC                 = 72
#   Instr              = 0xe5916000
#   ALUControl         = 0
#   ALUResult (addr)   = 16
#   ReadData           = 0
#   Result             = 0
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 4294967255
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 19:
#   PC                 = 76
#   Instr              = 0xe2866001
#   ALUControl         = 0
#   ALUResult (addr)   = 1
#   ReadData           = 10
#   Result             = 1
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 4294967255
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 20:
#   PC                 = 80
#   Instr              = 0xe1560008
#   ALUControl         = 1
#   ALUResult (addr)   = 4294967294
#   ReadData           = x
#   Result             = 4294967294
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 110
#   R0 = 4294967255
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 1
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 21:
#   PC                 = 84
#   Instr              = 0x3a000000
#   ALUControl         = 0
#   ALUResult (addr)   = 92
#   ReadData           = x
#   Result             = 92
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 4294967294
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 1
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 22:
#   PC                 = 88
#   Instr              = 0xe0466006
#   ALUControl         = 1
#   ALUResult (addr)   = 0
#   ReadData           = 10
#   Result             = 0
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 1
#   R0 = 4294967294
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 1
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 23:
#   PC                 = 92
#   Instr              = 0xe5816000
#   ALUControl         = 0
#   ALUResult (addr)   = 16
#   ReadData           = 0
#   Result             = 16
#   RegWrite           = 0
#   MemWrite           = 1
#   PCSrc              = 0
#   Flags              = 0
#   R0 = 4294967294
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 24:
#   PC                 = 96
#   Instr              = 0xeafffff5
#   ALUControl         = 0
#   ALUResult (addr)   = 60
#   ReadData           = x
#   Result             = 60
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 1
#   Flags              = 100
#   R0 = 4294967294
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 25:
#   PC                 = 60
#   Instr              = 0xe5905000
#   ALUControl         = 0
#   ALUResult (addr)   = 4294967294
#   ReadData           = x
#   Result             = x
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = 10
#   R0 = 4294967294
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = 0
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 26:
#   PC                 = 64
#   Instr              = 0xe3550029
#   ALUControl         = 1
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 1
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = 4294967294
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 27:
#   PC                 = 68
#   Instr              = 0x0a000006
#   ALUControl         = 0
#   ALUResult (addr)   = 100
#   ReadData           = x
#   Result             = 100
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = x
#   Flags              = 0
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 28:
#   PC                 = X
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 29:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 30:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 31:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 32:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 33:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 34:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 35:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 36:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 37:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 38:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# Ciclo 39:
#   PC                 = x
#   Instr              = 0xxxxxxxxx
#   ALUControl         = 0
#   ALUResult (addr)   = x
#   ReadData           = x
#   Result             = x
#   RegWrite           = 0
#   MemWrite           = 0
#   PCSrc              = 0
#   Flags              = x
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
# -----------------------------
# === RESULTADO FINAL ===
#   R0 = x
#   R1 = 16
#   R2 = 32
#   R3 = 32
#   R4 = 0
#   R5 = x
#   R6 = 0
#   R7 = 0
#   R8 = 3
#   R9 = 0
#   R10 = 0
#   R11 = 0
#   R12 = 0
#   RAM[7] (si STR se ejecuto) = x
# TEST FALLO
# ** Note: $finish    : C:/Users/joseb/Documents/GitHub/CE3201_PF/tb_Gambling_Tec_ROM.sv(86)
#    Time: 415 ns  Iteration: 1  Instance: /tb_Gambling_Tec_ROM
# 1
# Break in Module tb_Gambling_Tec_ROM at C:/Users/joseb/Documents/GitHub/CE3201_PF/tb_Gambling_Tec_ROM.sv line 86
# End time: 09:13:27 on Jun 17,2025, Elapsed time: 0:00:41
# Errors: 0, Warnings: 0
